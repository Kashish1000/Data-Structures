#include<iostream>
#include<stdlib.h>
using namespace std;
struct StackNode
{
    int data;
    struct StackNode *next;
}*root=NULL;
void push(int data)
{
    if(root==NULL)
    {
        root=(struct StackNode*)malloc(sizeof(struct StackNode));
        root->data=data;
        root->next=NULL;
        cout<<endl<<root->data<<" : is pushed into the stack";
    }
    else
    {
        struct StackNode *ptr=root;
        while(ptr->next!=NULL)
        {
            ptr=ptr->next;
            
        }
        struct StackNode *newNode=(struct StackNode*)malloc(sizeof(struct StackNode));
        newNode->data=data;
        newNode->next=NULL;
        ptr->next=newNode;
        cout<<endl<<newNode->data<<" : is pushed into the stack";
    }
}

void printStack()
{
    if(root==NULL)
    cout<<"Stack is underflow";
    else
    {
        cout<<endl<<"Stack elements are :";
        struct StackNode *ptr=root;
        while(ptr!=NULL)
        {
            cout<<" "<<ptr->data;
            ptr=ptr->next;
        }    
    }
    
}

void pop()
{
    struct StackNode *ptr=root;
    if(root==NULL)
    cout<<"Error! Stack is Empty";
    else
    {
        while(ptr->next->next!=NULL)
        {
            ptr=ptr->next;
            
        }
    struct StackNode *temp=ptr->next;
    cout<<endl<<temp->data<<" : is popped from stack";
    free(temp);
    ptr->next=NULL;
    printStack();
        
    }
    
}

void peek()
{
    if(root==NULL)
    {
        cout<<endl<<"Stack is underflow";
    }
    struct StackNode *top=root;
    while(top->next!=NULL)
    top=top->next;
    cout<<endl<<"Topmost element in the stack is :"<<top->data;
}

int main()
{
    cout<<"Linked List Implementation of Stack";
    push(10);
    push(20);
    push(30);
    printStack();
    pop();
    peek();
    
    
    return(0);
}
