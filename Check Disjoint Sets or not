#include<iostream>
#include<bits/stdc++.h>
#include<unordered_set>
using namespace std;

bool checkDisjoint(int arr[],int n,int arr2[],int m)
{
	// using hash table to store elements of 1 array
	unordered_multiset<int> mySet;
	for(int i=0;i<n;i++)
	{
		mySet.insert(arr[i]);
	}
	for(int i=0;i<m;i++)
	{
		if( mySet.find(arr2[i]) != mySet.end() )  // find operatoin in unordered_set takes constant time
		return(false); 							// if element not found then find function returns an iterator pointing to the element just after the last element of the set
	}  // if any element found which is similar in both the arrays/sets then given sets are not disjoint
	return(true);
}
int main()
{
	int arr[]={10,40,22,35,1,0,5};
	int arr2[]={11,41,21,23,36};
	int m,n;
	m=(sizeof(arr)/sizeof(arr[0]));
	n=(sizeof(arr2)/sizeof(arr[1]));
	checkDisjoint(arr,m,arr2,n) ? cout<<"Given sets are disjoint sets" : cout<<"Not Disjoint sets" ;
	return(0);
}
