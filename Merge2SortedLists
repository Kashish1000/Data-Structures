#include<iostream>
#include<bits/stdc++.h>
// structure of node
using namespace std; 
struct node 
{
	int data;
	struct node* next;
};
// create a newNode
struct node* newNode(int data)
{
	struct node* newNode=(struct node*)malloc(sizeof(struct node));
	newNode->data=data;
	newNode->next=NULL;
	return(newNode);
}
// create list from the array elements 
struct node* newList(int arr[],int size) 
{
	struct node* head=NULL,*ptr;
	for(int i=0;i<size;i++)
	{
		if(head==NULL)
		head=newNode(arr[i]);
		else
		{
			ptr=head;
			while(ptr->next)
			{
				ptr=ptr->next;		// insertion at the end of the list 
			}
			ptr->next=newNode(arr[i]);
		}
	} // end of for loop
	return(head);
}
void printList(struct node *head)
{
	if(!head) 
	cout<<"list is empty";
	else
	{
		struct node* ptr=head;
		while(ptr)
		{
			cout<<" "<<ptr->data;
			ptr=ptr->next;		
		}	
	}
	
}
// merging two sorted linkedlist TC=O(m+n) , SC=O(1) 
struct node* mergeList(struct node* head1, struct node* head2)
{
	
	if(!head1) return(head2);
	if(!head2) return(head1);
	struct node *result;
	
		struct node* temp=NULL,*ptr1=head1,*ptr2=head2;
		while(ptr1 && ptr2)
		{
			if( ptr1->data < ptr2->data )
			{
				if(!temp)
				{
					temp=ptr1;
					ptr1=ptr1->next;
					result=temp;
				}
				else
				{
					temp->next=ptr1;
					temp=ptr1;
					ptr1=ptr1->next;
				}
			} // if ptr1<ptr2
			else
			{
				if(!temp)
				{
					temp=ptr2;
					ptr2=ptr2->next;
					result=temp;
				}
				else
				{
					temp->next=ptr2;
					temp=ptr2;
					ptr2=ptr2->next;		
				}
			}	
		}// end of while loop
		if(!ptr1) temp->next=ptr2;
		else
		temp->next=ptr1;	
	
	return(result);
}
// main function
int main()
{
	struct node* head1, *head2 ,*mergedList;
	int arr[]={10,20,30};
	int arr2[]={15,25,35};
	head1=newList(arr,3);
	cout<<endl;
	printList(head1);
	head2=newList(arr2,3);
	cout<<endl;
	printList(head2);
	cout<<endl<<"Merging both the sortedlist ";
	mergedList=mergeList(head1,head2);
	cout<<endl;
	printList(mergedList);
	return(0);
}
