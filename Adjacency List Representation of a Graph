// Adjacency list representation of a graph
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
void addEdge(vector<int> list[],int v,int u)
{
    list[v].push_back(u);
    
}

void printGraph(vector<int> list[],int N)
{
    for(auto itr=0;itr!=N;itr++)
    {
        cout<<endl;
        for(auto x=list[itr].begin();x!=list[itr].end();x++)
        {
            cout<<itr<<"-> "<<*x<<" ,";
        }
        
    }
}
int main()
{
    vector<int> v1[5];
    addEdge(v1,0,1);
    addEdge(v1,0,4);
    addEdge(v1,1,0);
    addEdge(v1,1,2);
    addEdge(v1,1,3);
    addEdge(v1,1,4);
    addEdge(v1,2,1);
    addEdge(v1,2,3);
    addEdge(v1,3,1);
    addEdge(v1,3,2);
    addEdge(v1,3,4);
    addEdge(v1,4,0);
    addEdge(v1,4,1);
    addEdge(v1,4,3);
    
    
    cout<<endl<<"Edges of given graph are :";
    printGraph(v1,5);
    
    return(0);
}
