#include<iostream>
#include<vector>

using namespace std;
int main()
{
    vector<int> v1;
    int a[]={31,32,33,34,35,36};
    //initialise the vector
    for(int i=1;i<=5;i++)
    {
        v1.push_back(i+10);
    }
// <--------- Vector Iterators --------->   
    // print vector
    for(auto itr=v1.begin();itr!=v1.end();itr++)
    {
        cout<<" "<<*itr;
    }
    cout<<endl;
    // print reverse vector
    // rbegin will point to last element and rend will point logically to 1 element before the 1st element
    for(auto itr=v1.rbegin();itr!=v1.rend();itr++)
    {
        cout<<" "<<*itr;
    }
    auto itr=v1.cbegin(); // value of the location pointed by the cbegin() can not be changed
    cout<<endl<<"Value of itr pointing to constant is : "<<*itr;
    // *itr=*itr+1; // Error: Assignment to read only location
    cout<<endl<<"Value of vector in reverse manner is :";
    for(auto itr=v1.crbegin();itr!=v1.crend();itr++)
    {
        cout<<" "<<*itr;
    }
  
// <---------vector capacity---------->
    v1.resize(4);
    cout<<endl<<"Vector after resizing is :";
    for(auto itr=v1.begin();itr!=v1.end();itr++)
    {
        cout<<" "<<*itr;
    }
    v1.resize(5);
    cout<<endl<<"Vector after resizing is :";
    for(auto itr=v1.begin();itr!=v1.end();itr++)
    {
        cout<<" "<<*itr;
    }
    v1.pop_back();
    cout<<endl<<"Vector after poping an element from its last position";
    for(auto itr=v1.begin();itr!=v1.end();itr++)
    {
        cout<<" "<<*itr;
    }
    cout<<endl<<"Value of vector after assigning it array values :"<<endl;
    v1.assign(a,a+6);
    // we can also use copy(first_iterator_o, last_iterator_o, back_insertor(vect2) ) function 
    // assign operator only takes assign(first_iterator_o, last_iterator_o) 
    // total 2 member functions on vector class copy(), assign()
    for(auto itr=v1.begin();itr!=v1.end();itr++)
    {
        cout<<" "<<*itr;
    }
    return(0);
}
// To sort the vector use sort(v1.begin(), v1.end()); function defined in algorithm macro
